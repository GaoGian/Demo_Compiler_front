#包名 import包列表 类声明
javaLanguage → packageDeclaration importDeclaration classDeclaration

#包名
packageDeclaration → ◀package▶ qualifiedName ◀;▶ | ε
importDeclaration → ◀import▶ qualifiedName ◀;▶ | ε
qualifiedName → ◀Identifier▶ IdentifierRepeat

#类声明
classDeclaration → modifierDeclaration ◀class▶ Identifier extendsInfo classBody
#类继承信息
extendsInfo → ◀extends▶ classIdentifier | ε
#类名
classIdentifier → ◀Identifier▶
IdentifierRepeat → ◀.▶ ◀Identifier▶ | ε

#权限
modifierDeclaration → ◀public▶ | ◀protected▶ | ◀private▶ | ◀static▶

#类体
classBody → ◀{▶ classBodyDeclaration ◀}▶
classBodyDeclaration → fieldDeclaration constructorDeclaration methodDeclaration | ε

#类属性声明
fieldDeclaration → modifierDeclaration typeDeclaration variableDeclaratorId ◀;▶

#变量类型声明
typeDeclaration → baseTypeDeclaration typeComponent
baseTypeDeclaration → primitiveType | classIdentifier
#基础类型
primitiveType → ◀boolean▶ | ◀char▶ | ◀byte▶ | ◀short▶ | ◀int▶ | ◀long▶ | ◀float▶ | ◀double▶
#数组声明
typeComponent → ◀[▶ ◀]▶ typeComponent | ε
#变量名
variableDeclaratorId → Identifier

#构造体声明
constructorDeclaration → modifierDeclaration Identifier formalParameters constructorBody
constructorBody → ◀{▶ explicitConstructorInvocation blockStatement ◀}▶
explicitConstructorInvocation → ◀super▶ ◀(▶ expressionList ◀)▶

#方法声明
methodDeclaration → modifierDeclaration typeDeclaration methodIdentifier formalParameters methodBody
#方法名
methodIdentifier → Identifier
#方法变量声明
formalParameters → ◀(▶ formalParameterDecls ◀)▶
formalParameterDecls → typeDeclaration variableDeclaratorId formalParameterDeclsRest | ε
formalParameterDeclsRest → ◀,▶ typeDeclaration variableDeclaratorId formalParameterDeclsRest | ε
#方法体声明
methodBody → block

#代码块
block → ◀{▶ blockStatement ◀}▶
#代码语句
blockStatement → localVariableDeclarationStatement statement | statement | ε
#局部变量声明
localVariableDeclarationStatement → localVariableDeclaration ◀;▶ localVariableDeclarationStatement | ε
localVariableDeclaration → typeDeclaration variableDeclaratorId variableInitializer
#局部变量初始化
variableInitializer → ◀=▶ expression | ε

#方法语句
statement → block | ◀if▶ parExpression statement elseStatement | ◀for▶ ◀(▶ forControl ◀)▶ statement | ◀while▶ parExpression statement | ◀do▶ statement ◀while▶ parExpression ◀;▶ | ◀switch▶ parExpression switchBlock | ◀return▶ expression ◀;▶ | ◀break▶ ◀;▶ | ◀continue▶ ◀;▶ | statementExpression
#if else 部分
elseStatement → ◀else▶ statement | ε
#表达式
parExpression → ◀(▶ expression ◀)▶
#表达式
expression → variableDeclaratorId | targetVariableDeclaratorId ◀.▶ methodIdentifier ◀(▶ expressionList ◀)▶ | targetVariableDeclaratorId ◀.▶ variableDeclaratorId | expression ◀[▶ expression ◀]▶ | expression ◀(▶ expressionList ◀)▶ | ◀new▶ Identifier ◀(▶ expressionList ◀)▶ | expression ◀+▶ expression | expression ◀-▶ expression | term | ◀String▶
expressionList → expression expressionListRest | ε
expressionListRest → ◀,▶ expression expressionListRest | ε
#引用对象声明
targetVariableDeclaratorId → variableDeclaratorId | ◀this▶
#乘除表达式因子
term → term ◀*▶ factor | term ◀/▶ factor | factor | ◀Number▶ | ◀Digit▶
factor → variableDeclaratorId

#for循环条件表达式
forControl → forInit ◀;▶ parExpression ◀;▶ forUpdate
forInit → localVariableDeclaration
forUpdate → expression

#switch
switchBlock → ◀{▶ switchBlockStatementGroup switchLabel ◀}▶
switchBlockStatementGroup → switchLabel blockStatement
switchLabel → ◀case▶ ◀Digit▶ ◀:▶ | ◀case▶ ◀Number▶ ◀:▶ | ◀case▶ ◀String▶ ◀:▶ | ◀default▶ ◀:▶

statementExpression → expression ◀;▶ statementExpression | ε







